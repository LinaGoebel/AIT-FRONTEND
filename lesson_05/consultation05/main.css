*{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}
@font-face {
    font-family: Roboto;
    src: url(./Roboto-Regular.ttf);
}

body{
    background-color: #f8efba;
}

main{
    width: 70%;
    padding: 50px;
    margin: auto;
    background-color: #fff;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    box-shadow: 0 0 10px 1px rgba(0,0,0,0.3);
}

h1{
    width: 100%;
    text-align: center;
    font-size: 48px;
}

.photo:hover{
    transform: scale(1.7) rotate(3deg);
}

.photo{
width: calc(50% - 40px);
height: calc((35vw - 40px) / 16 * 9);
    /* Пример
Если окно просмотра (viewport) имеет ширину 1000px:

35vw будет равно 350px (35% от 1000px).
35vw - 40px будет равно 310px (350px - 40px).
(310px / 16) * 9 будет равно примерно 174.375px (соотношение сторон 16:9).
Итоговые значения будут зависеть от ширины окна просмотра и ширины родительского элемента.

Эти вычисления позволяют адаптировать размеры элемента в зависимости от размеров 
окна просмотра и родительского элемента, сохраняя пропорции и отступы. */
margin: 20px;
background-color: orange;
background-position: center;
background-size: cover;
box-shadow: 0 0 10px 1px rgba(0,0,0,0.3);
border-radius: 10px;
transition: all 0.9s ease;
}

.photo1{
    background-image: url(./img/img1.jpeg);

}
.photo2{
    background-image: url(./img/img2.jpeg);
    
}
.photo3{
    background-image: url(./img/img3.jpeg);
    
}
.photo4{
    background-image: url(./img/img4.jpeg);
}
.photo5{
    background-image: url(./img/img5.jpeg);
}
.photo6{
    background-image: url(./img/img6.jpeg);
}
.photo7{
    background-image: url(./img/img7.jpeg);
}
.photo8{
    background-image: url(./img/img8.jpeg);
}
.photo9{
    background-image: url(./img/img9.jpeg);
}
.photo10{
    background-image: url(./img/img10.jpeg);
}
.photo11{
    background-image: url(./img/img11.jpg);
}
.photo12{
    background-image: url(./img/img12.jpeg);
}